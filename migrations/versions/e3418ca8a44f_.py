"""empty message

Revision ID: e3418ca8a44f
Revises: 
Create Date: 2019-04-09 17:48:48.031295

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3418ca8a44f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('primary_phone', sa.Text(), nullable=True),
    sa.Column('secondary_phone', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('farm_name', sa.Text(), nullable=True),
    sa.Column('farm_location', sa.Text(), nullable=True),
    sa.Column('area', sa.Text(), nullable=True),
    sa.Column('is_producer', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_other', sa.Boolean(), nullable=True),
    sa.Column('member_since', sa.Date(), nullable=True),
    sa.Column('farm_type', sa.Text(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('mailing_street', sa.Text(), nullable=True),
    sa.Column('mailing_city', sa.Text(), nullable=True),
    sa.Column('mailing_province', sa.Text(), nullable=True),
    sa.Column('mailing_country', sa.Text(), nullable=True),
    sa.Column('mailing_postal_code', sa.Text(), nullable=True),
    sa.Column('billing_street', sa.Text(), nullable=True),
    sa.Column('billing_city', sa.Text(), nullable=True),
    sa.Column('billing_province', sa.Text(), nullable=True),
    sa.Column('billing_country', sa.Text(), nullable=True),
    sa.Column('billing_postal_code', sa.Text(), nullable=True),
    sa.Column('user_comments', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('livestock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.Text(), nullable=True),
    sa.Column('breed', sa.Text(), nullable=True),
    sa.Column('single_brand', sa.Text(), nullable=True),
    sa.Column('est_birthdate', sa.Date(), nullable=True),
    sa.Column('registration_number', sa.Integer(), nullable=True),
    sa.Column('rfid_tag', sa.Integer(), nullable=True),
    sa.Column('starting_weight', sa.Integer(), nullable=True),
    sa.Column('hanging_weight', sa.Integer(), nullable=True),
    sa.Column('chargebacks', sa.Integer(), nullable=True),
    sa.Column('starting_date_of_feed', sa.Date(), nullable=True),
    sa.Column('feed_method', sa.Text(), nullable=True),
    sa.Column('type_of_pasture', sa.Text(), nullable=True),
    sa.Column('type_of_feed', sa.Text(), nullable=True),
    sa.Column('est_completion_date', sa.Date(), nullable=True),
    sa.Column('est_finished_weight', sa.Integer(), nullable=True),
    sa.Column('est_price_to_be_paid', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('price_paid', sa.Integer(), nullable=True),
    sa.Column('delivered_date', sa.Date(), nullable=True),
    sa.Column('delivered_to', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('produce',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.Text(), nullable=True),
    sa.Column('package_type', sa.Text(), nullable=True),
    sa.Column('date_planted', sa.Date(), nullable=True),
    sa.Column('seed_type', sa.Text(), nullable=True),
    sa.Column('modified_seed', sa.Text(), nullable=True),
    sa.Column('heirloom', sa.Text(), nullable=True),
    sa.Column('fertilizer_type_used', sa.Text(), nullable=True),
    sa.Column('pesticide_type_used', sa.Text(), nullable=True),
    sa.Column('estimated_qty_planted', sa.Integer(), nullable=True),
    sa.Column('gmo', sa.Text(), nullable=True),
    sa.Column('estimated_finished_qty', sa.Integer(), nullable=True),
    sa.Column('est_price_to_be_paid', sa.Integer(), nullable=True),
    sa.Column('qty_accepted_for_listing', sa.Integer(), nullable=True),
    sa.Column('qty_accepted_at_delivery', sa.Integer(), nullable=True),
    sa.Column('chargebacks', sa.Integer(), nullable=True),
    sa.Column('price_paid', sa.Integer(), nullable=True),
    sa.Column('delivered_date', sa.Date(), nullable=True),
    sa.Column('delivered_to', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('produce')
    op.drop_table('livestock')
    op.drop_table('users')
    # ### end Alembic commands ###
